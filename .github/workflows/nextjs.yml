# .github/workflows/deploy-pages.yml
name: Deploy Next.js site to Pages

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Detecta el lockfile para cache (si cambias a npm/yarn, ajusta aquí)
      - name: Detect package manager
        id: detect
        shell: bash
        run: |
          if [ -f "${{ github.workspace }}/pnpm-lock.yaml" ]; then
            echo "manager=pnpm" >> $GITHUB_OUTPUT
            echo "lockfile=pnpm-lock.yaml" >> $GITHUB_OUTPUT
          else
            echo "Este workflow está preparado para pnpm (hay pnpm-lock.yaml)."
            echo "Si deseas npm, elimina pnpm-lock.yaml y ajusto el pipeline."
            echo "manager=pnpm" >> $GITHUB_OUTPUT
            echo "lockfile=pnpm-lock.yaml" >> $GITHUB_OUTPUT
          fi

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: ${{ steps.detect.outputs.manager }}
          cache-dependency-path: ${{ steps.detect.outputs.lockfile }}

      # Instala pnpm correctamente y ejecuta 'pnpm install'
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: true   # ejecuta 'pnpm install' automáticamente

      # Configura GitHub Pages (inyecta assetPrefix/basePath e imágenes unoptimized)
      - name: Setup Pages
        uses: actions/configure-pages@v5
        with:
          static_site_generator: next

      # Cache de Next para acelerar builds incrementales
      - name: Restore Next.js cache
        uses: actions/cache@v4
        with:
          path: .next/cache
          key: ${{ runner.os }}-next-${{ hashFiles('**/pnpm-lock.yaml') }}-${{ hashFiles('**/*.[jt]s', '**/*.[jt]sx', '**/*.cjs', '**/*.mjs', 'next.config.*') }}
          restore-keys: |
            ${{ runner.os }}-next-${{ hashFiles('**/pnpm-lock.yaml') }}-

      # Build + Export (usa pnpm exec para resolver binarios locales)
      - name: Build
        run: pnpm exec next build

      - name: Export static site
        run: pnpm exec next export

      # CNAME para el dominio personalizado
      - name: Add CNAME for custom domain
        run: echo "comunicar.macondosoftwares.com" > ./out/CNAME

      # 404 de respaldo (opcional)
      - name: Ensure 404.html exists
        run: |
          if [ ! -f "./out/404.html" ] && [ -f "./out/index.html" ]; then
            cp ./out/index.html ./out/404.html
          fi

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
